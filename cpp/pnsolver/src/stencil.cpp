// This file was generated by stencil.py

#include <PNSystem.h>

// truncation order is directly linked to the generated stencil
int PNSystem::g_order = 1;

void set_system_row(PNSystem::VoxelSystem& sys,
					PNSystem::Fields& fields)
{
	V2i vi = sys.getVoxel();
	V2d vd = sys.getVoxel().cast<double>();
	V2d h_inv( 1.0/(1*sys.getVoxelSize()[0]), 1.0/(1*sys.getVoxelSize()[1]) );


	sys.coeff_b(0) += fields.q->eval(0,0, sys.voxelToWorld(vd+V2d(0.5, 0.5))).real();
	sys.coeff_A(0, vi, 0) += -fields.sigma_s->eval( sys.voxelToWorld(vd+V2d(0.5, 0.5)) ).real()*fields.f_p->eval( 0, 0, sys.voxelToWorld(vd+V2d(0.5, 0.5)) ).real();
	sys.coeff_A(0, vi, 0) += fields.sigma_t->eval( sys.voxelToWorld(vd+V2d(0.5, 0.5)) ).real();
	sys.coeff_A( 0, vi + V2i(0,0), 1 ) += -(0.57735027*h_inv[0]);
	sys.coeff_A( 0, vi + V2i(1,0), 1 ) += (0.57735027*h_inv[0]);
	sys.coeff_A( 0, vi + V2i(0,0), 2 ) += -(0.57735027*h_inv[1]);
	sys.coeff_A( 0, vi + V2i(0,1), 2 ) += (0.57735027*h_inv[1]);
	sys.coeff_A(1, vi, 1) += fields.sigma_t->eval( sys.voxelToWorld(vd+V2d(0.0, 0.5)) ).real();
	sys.coeff_A( 1, vi + V2i(-1,0), 0 ) += -(0.57735027*h_inv[0]);
	sys.coeff_A( 1, vi + V2i(0,0), 0 ) += (0.57735027*h_inv[0]);
	sys.coeff_A(2, vi, 2) += fields.sigma_t->eval( sys.voxelToWorld(vd+V2d(0.5, 0.0)) ).real();
	sys.coeff_A( 2, vi + V2i(0,-1), 0 ) += -(0.57735027*h_inv[1]);
	sys.coeff_A( 2, vi + V2i(0,0), 0 ) += (0.57735027*h_inv[1]);
}
